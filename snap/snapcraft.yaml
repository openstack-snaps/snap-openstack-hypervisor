name: openstack-hypervisor
version: '2023.1'
base: core22
summary: OpenStack Hypervisor
description: |
  The OpenStack Hypervisor snap provides the requires components
  to operate a cloud hypervisor as part of an OpenStack deployment.
grade: stable
confinement: strict
environment:
  LC_ALL: C
  PATH: $SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$SNAP/usr/local/bin:$SNAP/usr/local/sbin:$PATH
  # Standard library components must have priority in module name resolution: https://storyboard.openstack.org/#!/story/2007806
  PYTHONPATH: $PYTHONPATH:$SNAP/usr/lib/python3.10:$SNAP/usr/lib/python3.10/site-packages:$SNAP/usr/lib/python3/dist-packages:$SNAP/lib/python3.10:$SNAP/lib/python3.10/site-packages
  # OVN runtime configuration
  OVN_LOGDIR: $SNAP_COMMON/log/ovn
  OVN_RUNDIR: $SNAP_COMMON/run/ovn
  OVN_SYSCONFDIR: $SNAP_COMMON/etc
  OVN_PKGDATADIR: $SNAP/usr/share/ovn
  OVN_BINDIR: $SNAP/usr/bin
  OVN_SBINDIR: $SNAP/usr/sbin
  # OVS runtime configuration
  OVS_LOGDIR: $SNAP_COMMON/log/openvswitch
  OVS_RUNDIR: $SNAP_COMMON/run/openvswitch
  OVS_SYSCONFDIR: $SNAP_COMMON/etc
  OVS_PKGDATADIR: $SNAP/usr/share/openvswitch
  OVS_BINDIR: $SNAP/usr/bin
  OVS_SBINDIR: $SNAP/usr/sbin

architectures:
  - build-on: amd64
  - build-on: arm64

system-usernames:
  snap_daemon: shared

layout:
  /usr/local/bin:
    symlink: $SNAP/usr/local/bin
  /usr/lib/$CRAFT_ARCH_TRIPLET/ceph:
    symlink: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/ceph
  /usr/lib/$CRAFT_ARCH_TRIPLET/qemu:
    symlink: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/qemu
  /usr/lib/$CRAFT_ARCH_TRIPLET/pulseaudio:
    symlink: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/pulseaudio
  /usr/lib/libvirt:
    symlink: $SNAP/usr/lib/libvirt
  /usr/share/libvirt:
    symlink: $SNAP/usr/share/libvirt
  /usr/share/qemu:
    symlink: $SNAP/usr/share/qemu
  # For UEFI Support, bindmount the OVMF and AAVMF directories
  # appropriately. UEFI support is required for aarch64.
  /usr/share/OVMF:
    symlink: $SNAP/usr/share/OVMF
  /usr/share/AAVMF:
    symlink: $SNAP/usr/share/AAVMF

package-repositories:
  - type: apt
    components: [main]
    suites: [jammy-updates/antelope]
    key-id: 391A9AA2147192839E9DB0315EDB1B62EC4926EA
    url: http://ubuntu-cloud.archive.canonical.com/ubuntu

apps:
  # Libvirt
  libvirtd:
    command: usr/sbin/libvirtd --pid $SNAP_DATA/libvirt.pid --listen
    daemon: simple
    plugs:
      - network
      - network-bind
      - network-control
      - netlink-connector
      - netlink-audit
      - libvirt
      - opengl
      - raw-usb
      - hardware-observe
      - hugepages-control
      - kvm
      - kernel-module-observe
      - process-control
      - mount-observe
      - block-devices
      - microstack-support
    # Make sure KillMode=process is set in the resulting systemd unit instead of
    # the default KillMode=control-group to avoid the situation where stopping
    # libvirtd causes the forced power off scenario for all VMs; it also affects
    # snap refreshes as libvirtd is restarted in this case.
    # Removing the snap will still result in VMs being forcefully powered off which
    # is intended.
    stop-mode: sigterm

  virtlogd:
    command: usr/sbin/virtlogd --pid $SNAP_DATA/virtlogd.pid
    daemon: simple
    plugs:
      - network
      - network-bind
      - network-control
      - microstack-support
  virsh:
    command: usr/bin/virsh
    plugs:
      - network
      - microstack-support

  # Openvswitch
  ovs-vswitchd:
    command: usr/share/openvswitch/scripts/ovs-ctl --no-ovsdb-server --no-monitor start
    stop-command: usr/share/openvswitch/scripts/ovs-ctl --no-ovsdb-server stop
    after: [ovsdb-server]
    daemon: forking
    plugs:
      - network
      - network-bind
      - network-control
      - firewall-control
      - openvswitch-support
      - process-control
      - system-trace
      - hardware-observe
      - hugepages-control
      - microstack-support
  ovsdb-server:
    command: "bin/ovsdb-server-service"
    stop-command: usr/share/openvswitch/scripts/ovs-ctl --no-ovs-vswitchd stop
    daemon: forking
    plugs:
      - network
      - network-bind
      - network-control
      - openvswitch-support
      - process-control
      - system-trace
      - microstack-support

  # OVN
  ovn-controller:
    command: usr/share/ovn/scripts/ovn-ctl start_controller --no-monitor
    stop-command: usr/share/ovn/scripts/ovn-ctl stop_controller --no-monitor --restart
    daemon: forking
    plugs:
      - network
      - network-bind
      - network-control
      - openvswitch-support
      - process-control
      - system-trace
      - microstack-support
    after:
      - ovsdb-server
      - ovs-vswitchd

  # OVS/OVN cli tools
  ovn-appctl:
    command: usr/bin/ovn-appctl
    plugs:
      - network
      - network-bind
      - microstack-support
  ovn-trace:
    command: usr/bin/ovn-trace
    plugs:
      - network
      - network-bind
      - microstack-support
  ovn-detrace:
    command: usr/bin/ovn-detrace
    plugs:
      - network
      - network-bind
      - microstack-support

  ovs-vsctl:
    command: usr/bin/ovs-vsctl
    plugs:
      - network
      - process-control
      - microstack-support
  ovs-appctl:
    command: usr/bin/ovs-appctl
    plugs:
      - network
      - process-control
      - microstack-support
  ovs-ofctl:
    command: usr/bin/ovs-ofctl
    plugs:
      - network
      - process-control
      - microstack-support
  ovs-dpctl:
    command: usr/bin/ovs-dpctl
    plugs:
      - network
      - process-control
      - microstack-support

  nova-compute:
    command: 'bin/nova-compute-service'
    after: [libvirtd]
    daemon: simple
    plugs:
      - network
      - network-bind
      - network-control
      - firewall-control
      - hardware-observe
      - kvm
      - microstack-support
      # Needs access to block devices so that blockdev --flushbufs works.
      - block-devices

  neutron-ovn-metadata-agent:
    command: 'bin/neutron-ovn-metadata-agent-service'
    daemon: simple
    plugs:
      - network
      - network-bind
      - network-control
      - network-observe
      - microstack-support

  nova-api-metadata:
    command: 'bin/nova-api-metadata-service'
    daemon: simple
    plugs:
      - network
      - network-bind
      - firewall-control
      - microstack-support

  ceilometer-compute-agent:
    command: 'bin/ceilometer-compute-agent-service'
    after: [libvirtd]
    daemon: simple
    plugs:
      - network
      - network-bind
      - firewall-control
      - microstack-support

  hypervisor-config-service:
    command: 'bin/gunicorn openstack_hypervisor.api:app --workers 1 --worker-class uvicorn.workers.UvicornWorker --timeout 120 --bind unix:$SNAP_DATA/run/hypervisor-config/unix.socket'
    restart-condition: on-failure
    daemon: simple
    slots:
      - hypervisor-config
    plugs:
      - network
      - network-bind
      - network-control
      - firewall-control
      - microstack-support
    install-mode: enable
    sockets:
      unix:
        listen-stream: $SNAP_DATA/run/hypervisor-config/unix.socket
        socket-mode: 0666

parts:
  kvm-support:
    plugin: nil
    stage-packages:
    - on amd64:
      - msr-tools

  qemu:
    source: https://git.launchpad.net/ubuntu/+source/qemu
    source-type: git
    source-branch: ubuntu/jammy-updates
    source-depth: 1
    plugin: autotools
    stage-packages:
      - seabios
      - ipxe-qemu
      # UEFI Support, required on arm64
      - on arm64:
        - qemu-efi-aarch64
        - qemu-efi-arm
      - on amd64:
        - ovmf
      - freeglut3 # provides libglut.so.3
      - libnuma1
      - libspice-server1
      - libasound2
      - libasyncns0
      - libbluetooth3
      - libboost-iostreams1.74.0
      - libboost-random1.74.0
      - libboost-system1.74.0
      - libboost-thread1.74.0
      - libcaca0
      - libfdt1
      - libflac8
      - libglib2.0-0
      - libglu1-mesa
      - libiscsi7
      - libjpeg-turbo8
      - libnspr4
      - libnss3
      - libogg0
      - libopus0
      - libpixman-1-0
      - libpulse0
      - librados2
      - librbd1
      - libsdl1.2debian
      - libslang2
      - libsndfile1
      - libusb-1.0-0
      - libusbredirparser1
      - libvorbis0a
      - libvorbisenc2
      - libx11-6
      - libxi6
      - libxau6
      - libxcb1
      - libxdmcp6
      - libxext6
      - libpng16-16
      - libaio1
      - libasn1-8-heimdal
      - libbrotli1
      - libcurl3-gnutls
      - libgssapi3-heimdal
      - libhcrypto4-heimdal
      - libheimbase1-heimdal
      - libheimntlm0-heimdal
      - libhx509-5-heimdal
      - libkrb5-26-heimdal
      - libldap-2.5-0
      - libnghttp2-14
      - libpsl5
      - libroken18-heimdal
      - librtmp1
      - libssh-4
      - libwind0-heimdal
      - libjack0
      - libepoxy0
      - libcacard0
      - libnettle8
    build-packages:
      - bison
      - flex
      - acpica-tools
      - libaio-dev
      - libjack-dev
      - libpulse-dev
      - libasound2-dev
      - libcap-ng-dev
      - libfdt-dev
      - libiscsi-dev
      - libepoxy-dev
      - libdrm-dev
      - libnuma-dev
      - libcacard-dev
      - libpixman-1-dev
      - librbd-dev
      - libsasl2-dev
      - libspice-server-dev
      - libusb-1.0-0-dev
      - libusbredirparser-dev
      - libzstd-dev
      - zlib1g-dev
      - libudev-dev
      - libjpeg-dev
      - libpng-dev
      - libpmem-dev
      - nettle-dev
      - gcc
      - meson
      - ninja-build
    autotools-configure-parameters:
      - --enable-system
      - --target-list=x86_64-softmmu,aarch64-softmmu
      - --disable-blobs
      - --disable-user
      - --disable-linux-user
      - --disable-bsd-user
      - --disable-vhost-user
      - --disable-xen
      - --prefix=/usr
      - --localstatedir=/var/snap/$CRAFT_PROJECT_NAME/common
      - --sysconfdir=/var/snap/$CRAFT_PROJECT_NAME/common
      - --firmwarepath=/snap/$CRAFT_PROJECT_NAME/current/usr/share/seabios:/snap/$CRAFT_PROJECT_NAME/current/usr/share/seabios/optionrom:/snap/$CRAFT_PROJECT_NAME/current/usr/share/qemu:/snap/$CRAFT_PROJECT_NAME/current/usr/lib/ipxe/qemu
    override-build: |
      dpkg-source --before-build .
      craftctl default

      # Install keymaps as the qemu build process doe not!
      install -Dp -m0644 -t $CRAFT_PART_INSTALL/usr/share/qemu/keymaps $(ls -1 $CRAFT_PART_SRC/pc-bios/keymaps/* | fgrep -v /meson.build)

  libvirt:
    source: https://git.launchpad.net/ubuntu/+source/libvirt
    source-type: git
    source-branch: ubuntu/jammy-updates
    source-depth: 1
    after:
      - qemu
    plugin: meson
    build-packages:
    - libxml2-dev
    - libxml-libxml-perl
    - libcurl4-gnutls-dev
    - libncurses5-dev
    - libreadline-dev
    - zlib1g-dev
    - libgcrypt20-dev
    - libgnutls28-dev
    - libyajl-dev
    - libpcap0.8-dev
    - libaudit-dev
    - libdevmapper-dev
    - libpciaccess-dev
    - libnl-3-dev
    - libnl-route-3-dev
    - libxml2-utils
    - uuid-dev
    - libnuma-dev
    - python-all
    - python-six
    - wget
    - dpkg-dev
    - xsltproc
    - libapparmor-dev
    - rsync
    - open-iscsi
    - python3-docutils
    - gettext
    - meson
    - ninja-build
    stage-packages:
    - dmidecode
    - dnsmasq
    - iptables
    - genisoimage
    - libxml2
    - libyajl2
    - libnuma1
    - libcurl3-gnutls
    - libpcap0.8
    - libpciaccess0
    # libvirt uses the pm-is-supported tool.
    - pm-utils
    - ebtables
    - apparmor
    - libapparmor1
    meson-parameters:
    # Hypervisors
    - -Ddriver_qemu=enabled
    - -Ddriver_bhyve=disabled
    - -Ddriver_openvz=disabled
    - -Ddriver_vmware=disabled
    - -Ddriver_esx=disabled
    - -Ddriver_hyperv=disabled
    - -Ddriver_lxc=disabled
    - -Ddriver_vz=disabled
    - -Ddriver_vbox=disabled
    # QEMU options
    - -Dqemu_user=root
    - -Dqemu_group=root
    # Security Features
    - -Dsasl=disabled
    - -Dselinux=disabled
    - -Dsecdriver_selinux=disabled
    - -Dapparmor=disabled
    - -Dapparmor_profiles=disabled
    - -Dsecdriver_apparmor=disabled
    # Storage Drivers
    - -Dstorage_iscsi=enabled
    - -Dstorage_rbd=enabled
    - -Dstorage_sheepdog=disabled
    - -Dstorage_lvm=disabled
    - -Dstorage_vstorage=disabled
    - -Dstorage_zfs=disabled
    - -Dstorage_scsi=disabled
    - -Dglusterfs=disabled
    # General
    - -Ddocs=disabled
    - -Dbuildtype=release
    - -Dstrip=true
    - -Dtests=disabled
    # Installation
    - -Dchrdev_lock_files=/run/lock
    - -Dprefix=/snap/$CRAFT_PROJECT_NAME/current/usr
    - -Dbindir=/snap/$CRAFT_PROJECT_NAME/current/usr/bin
    - -Dsbindir=/snap/$CRAFT_PROJECT_NAME/current/usr/sbin
    - -Dlibexecdir=/snap/$CRAFT_PROJECT_NAME/current/usr/libexec
    - -Dlibdir=/snap/$CRAFT_PROJECT_NAME/current/usr/lib
    - -Dincludedir=/snap/$CRAFT_PROJECT_NAME/current/usr/include
    - -Dlocalstatedir=/var/snap/$CRAFT_PROJECT_NAME/common
    - -Dsysconfdir=/var/snap/$CRAFT_PROJECT_NAME/common/etc
    override-build: |
      dpkg-source --before-build $CRAFT_PART_SRC
      echo "

      /* Disable SETGROUPS usage */
      #undef WITH_SETGROUPS
      #define WITH_SETGROUPS 0

      /*
       * Ensure that some compile time detected binary locations are
       * overridden for the runtime locations in the installed snap
       */
      #undef DNSMASQ
      #define DNSMASQ \"/snap/$CRAFT_PROJECT_NAME/current/usr/sbin/dnsmasq\"
      #undef DMIDECODE
      #define DMIDECODE \"/snap/$CRAFT_PROJECT_NAME/current/usr/sbin/dmidecode\"
      #undef OVSVSCTL
      #define OVSVSCTL \"/snap/$CRAFT_PROJECT_NAME/current/usr/local/bin/ovs-vsctl\"
      #undef IPTABLES
      #define IPTABLES \"/snap/$CRAFT_PROJECT_NAME/current/usr/sbin/iptables-legacy\"
      #undef IP6TABLES
      #define IP6TABLES \"/snap/$CRAFT_PROJECT_NAME/current/usr/sbin/ip6tables-legacy\"
      #undef EBTABLES
      #define EBTABLES \"/snap/$CRAFT_PROJECT_NAME/current/usr/sbin/ebtables-legacy\"
      " >> $CRAFT_PART_SRC/config.h

      craftctl default

      rsync --remove-source-files -arhvP $CRAFT_PART_INSTALL/snap/$CRAFT_PROJECT_NAME/current/usr/* $CRAFT_PART_INSTALL/usr/
      rm -rf $CRAFT_PART_INSTALL/snap/$CRAFT_PROJECT_NAME/current/usr

  templates:
    source: templates/
    plugin: dump
    organize:
      '*': templates/

  bin:
    source: bin/
    plugin: dump
    organize:
      '*': bin/

  networking:
    plugin: nil
    stage-packages:
      - openvswitch-switch
      - openvswitch-switch-dpdk
      - ovn-host
    organize:
       # Deal with alternatives usage in deb packages.
       usr/lib/openvswitch-switch-dpdk/ovs-vswitchd-dpdk: usr/sbin/ovs-vswitchd

  openstack:
    plugin: nil
    stage-packages:
      - ceilometer-agent-compute
      - python3-nova
      - python3-neutron
      - python3-os-vif
      - python3-os-brick
      - python3-distutils
      - python3-systemd
      - python3-tz
      - haproxy
      - util-linux
    override-build: |
      craftctl default
      # NOTE:
      # purge libvirt0 provided components to avoid
      # conflicts with the libvirt part provided versions
      rm -rf $CRAFT_PART_INSTALL/usr/share/libvirt
      rm -rf $CRAFT_PART_INSTALL/usr/lib/*/libvirt*
      # purge some dangling symlinks
      rm -rf $CRAFT_PART_INSTALL/usr/lib/python3/dist-packages/netaddr/eui/iab.txt
      rm -rf $CRAFT_PART_INSTALL/usr/lib/python3/dist-packages/netaddr/eui/oui.txt
      # drop some docutils binaries to avoid libvirt part build confusion
      rm -rf $CRAFT_PART_INSTALL/usr/bin/rst2*

  openstack-hypervisor:
    plugin: python
    source: .
    build-packages:
      - git
    python-requirements:
      - requirements.txt
    after:
      - openstack
    override-build: |
      craftctl default
      snap-helpers write-hooks

slots:
  hypervisor-config:
    interface: content
    content: openstack-hypervisor
    source:
      write:
        - $SNAP_DATA/run/hypervisor-config

hooks:
  install:
    plugs: [ network, microstack-support]
  configure:
    plugs:
      - network
      - network-control
      - firewall-control
      - microstack-support
  connect-slot-hypervisor-config:
    plugs:
      - network
      - network-bind
      - microstack-support
